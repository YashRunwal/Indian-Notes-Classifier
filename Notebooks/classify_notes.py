# -*- coding: utf-8 -*-
"""classify_notes.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/19Jtm8pbMkxV3e92Iq8PibnmfAogKxf1t
"""

from google.colab import files
files.upload()

!mkdir -p ~/.kaggle
!cp kaggle.json ~/.kaggle/
!chmod 600 /root/.kaggle/kaggle.json

!kaggle datasets download -d shobhit18th/indian-currency-notes

Dataset = !unzip indian-currency-notes.zip

!pip install "torch==1.4" "torchvision==0.5.0"

# Commented out IPython magic to ensure Python compatibility.
from fastai.vision import *
from fastai import *

# %reload_ext autoreload
# %autoreload 2
# %matplotlib inline

path = Path('/content/indian_currency_new')
path.ls()

# Create a DataBunch
data = ImageDataBunch.from_folder(path, train='training', valid='validation', no_check=True, size=64)
print(data.classes);print(data.c)

learn = cnn_learner(data, models.resnet34, metrics=[error_rate, accuracy])

learn.fit_one_cycle(4)

learn.lr_find()
learn.recorder.plot()

learn.fit_one_cycle(4, slice(1e-3, 1e-2))

interp = ClassificationInterpretation.from_learner(learn)

interp.plot_confusion_matrix(figsize=(8,8), dpi=60)

learn.save('notes-classification-resnet34-stage-1')

"""# **Predicting a Single Image**"""

import pandas as pd
import requests
import glob
from io import BytesIO
import numpy as np
import os
import shutil
import pprint
import json

def fetch_image(url):
    response = requests.get(url)
    img = open_image(BytesIO(response.content))
    return img

def predict(url):
    img = fetch_image(url)
    pred_class,pred_idx,outputs = learn.predict(img)
    res =  zip (learn.data.classes, outputs.tolist())
    predictions = sorted(res, key=lambda x:x[1], reverse=True)
    top_predictions = predictions[0:5]
    pprint.pprint( top_predictions)
    return img.resize(500)

"""# **10 Rupee Note**"""

Note10_url = 'https://hi-static.z-dn.net/files/d60/1ca6e2f8ea8090c979600b88438ec602.jpg'
predict(Note10_url)

"""# **20 Rupee Note**"""

Note20_url = 'https://previews.123rf.com/images/gesrey/gesrey1803/gesrey180300005/98556961-close-up-20-indian-rupee-frontside-with-mahatma-gandhi-background.jpg'
predict(Note20_url)

"""# **50 Rupee Note**"""

Note50_url = 'https://i.ndtvimg.com/i/2017-08/rs-50-rbi_650x400_71503068441.jpg'
predict(Note50_url)

"""# **100 Rupee Note**"""

Note100_url = 'https://upload.wikimedia.org/wikipedia/commons/8/88/India_new_100_INR%2C_Mahatma_Gandhi_New_Series%2C_2018%2C_obverse.png'
predict(Note100_url)

"""# **Deploying the Model to Production**"""

learn.export()

defaults.device = torch.device('cpu')

learn = load_learner(path)

img = open_image(path/'training'/'10'/'1.jpg')
img

pred_class,pred_idx,outputs = learn.predict(img)
pred_class

with open('/content/indian_currency_new/models/classes.txt', 'w') as f:
    json.dump(learn.data.classes,f)

# This is app.py code

from flask import Flask, request, jsonify, render_template
import pickle

